package sam_message;


enum EnvelopeType {
  SIGNAL_MESSAGE = 1;
  PRE_KEY_SIGNAL_MESSAGE = 2;
  SENDER_KEY_MESSAGE = 3;
  PLAINTEXT_CONTENT = 4;
}

message ClientEnvelope {
  required EnvelopeType type = 1;
  map<uint32, bytes> content = 2;
  required bytes  destination_account_id = 3;
  required bytes  source_account_id = 4;
  required uint32 source_device_id  = 5;
}

message ServerEnvelope {
  required EnvelopeType type = 1;
  required bytes content = 2;
  required bytes  destination_account_id = 3;
  required uint32 destination_device_id  = 4;
  required bytes  source_account_id = 5;
  required uint32 source_device_id  = 6;
  required bytes id = 7;
}

enum MessageType {
  MESSAGE = 1;
  ACK = 2;
  ERROR = 3;
}

message ClientMessage {
  required MessageType type = 1;
  required bytes id = 2;
  optional ClientEnvelope message = 3;
}

message ServerMessage {
  required MessageType type = 1;
  required bytes id = 2;
  optional ServerEnvelope message = 3;
}
