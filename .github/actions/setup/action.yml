name: Setup

on:
  workflow_call:  

inputs:
  runner_os:
    description: 'Runner OS'
    required: true

jobs:
  build:
    runs-on: "composite"
    steps:

    - name: Set up cache for Protobuf
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/bin/protoc
          ~/.cache/protobuf
        key: ubuntu-protobuf-${{ hashFiles('/home/runner/.local/include/google/protobuf/descriptor.proto') }}
        restore-keys: |
          ubuntu-protobuf-

    - name: Install Protobuf
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        # Install Protoc.
        wget https://github.com/protocolbuffers/protobuf/releases/download/v21.3/protoc-21.3-linux-x86_64.zip
        unzip -o protoc-21.3-linux-x86_64.zip -d ~/.local

    - name: Cache Cargo bin (for sqlx-cli)
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/sqlx
        key: sqlx-cli-ubuntu-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          sqlx-cli-ubuntu-

    - name: Install SQLx CLI if not cached
      run: |
        if ! command -v sqlx &> /dev/null; then
          cargo install sqlx-cli
        else
          echo "sqlx-cli found in cache, skipping installation"
        fi

    - name: Verify SQLx installation
      run: sqlx --version

    - name: Setup sqlx
      run: cd client/database/ && sqlx db create -D sqlite://dev.db && sqlx migrate run -D sqlite://dev.db && cd ../..


